<?php

namespace ApiBundle\Entity\Repository;

/**
 * ProductCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductCategoryRepository extends \Doctrine\ORM\EntityRepository
{

    public function getArr() {
        return $this->createQueryBuilder('ct')
//            ->leftJoin('ct.products','pr')
//            ->select('ct, partial pr.{id, title}')
            ->getQuery()
            ->getArrayResult();
    }


    public function getArrayList(){
        $categories = $this->createQueryBuilder('c','c.id')
            ->select('c.id,c.title')
            ->getQuery()
            ->getArrayResult();
        $result=[];
        if($categories){
            foreach ($categories as $category){
                $result[$category['title']]=$category['id'];
            }
        }
        return $result;
    }
    public function getWithProducts($ids){
        return $this->createQueryBuilder('ct')
            ->select('ct,pr,ph,v')
            ->leftJoin('ct.products','pr','WITH', 'pr.id IN (:ids)')
            ->leftJoin('pr.phones','ph')
            ->leftJoin('ph.vendor','v')
            ->setParameter('ids',$ids)
            ->getQuery()
            ->getResult()
            ;
    }

    public function getByType($slug){
        return $this->createQueryBuilder('ct')
            ->select('ct')
            ->leftJoin('ct.products','pr')
            ->where('ct.slug = :slug')
            ->andWhere('ct.products IS NOT EMPTY')
            ->setParameter('slug',$slug)
            ->getQuery()
            ->getOneOrNullResult()
            ;
    }

    public function getByTypeForHTMLSitemap($slug){
        return $this->createQueryBuilder('ct')
            ->select('ct')
            ->leftJoin('ct.products','pr')
            ->where('ct.slug = :slug')
            ->andWhere('ct.products IS NOT EMPTY')
            ->setParameter('slug',$slug)
            ->andWhere('ct.showInHTMLSitemap = :true')
            ->setParameter('true', true)
            ->getQuery()
            ->getOneOrNullResult()
            ;
    }

    public function getAllForAnkor(){
        return $this->createQueryBuilder('p')
            ->select('p')
            ->indexBy('p', 'p.slug')
            ->getQuery()
            ->getResult();
    }
}
